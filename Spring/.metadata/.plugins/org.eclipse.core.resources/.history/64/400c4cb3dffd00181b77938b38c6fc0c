<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://xmlns.jcp.org/xml/ns/javaee" xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd" id="WebApp_ID" version="3.1">
  <display-name>Spring100_MVCBasics</display-name>
  <welcome-file-list>
    <welcome-file>homePage.do</welcome-file>
  </welcome-file-list>
  
  <!-- the listener mentioned below first searches for applicationContext.xml if it doesnot find that file it will refer to the file name mentioned in the context-param attribute -->
  <context-param>
  	<param-name>contextConfigLocation</param-name>
  	<param-value>/WEB-INF/spring.xml</param-value>
  </context-param>
  
  <!-- Creates the Spring Container (Application Context) shared by all Servlets and Filters. It calls the getinitparam method to see the xml name. -->
  <!-- By default it refers to applicationContext.xml -->
  <!-- It creates a ApplicationContext which works as Parent context -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	
	<!-- It creates WebApplicationContext which works as a Child context -->
	<!-- The child context can refere to the beans of parent context but not vice versa -->
  <servlet>
		<servlet-name>fcForHR</servlet-name> <!-- appServlet is the cannonical name  -->
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name> <!--  This name cannot be changed and is known by the DispatcherServlet-->
			<param-value>/WEB-INF/springWebHR.xml</param-value> <!-- Project related path -->
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
		
	<servlet-mapping>
		<servlet-name>fcForHR</servlet-name>
		<url-pattern>*.hr</url-pattern> <!-- then we need to mention .do in all the @RequestMapping annotated methods  -->
	</servlet-mapping>
</web-app>