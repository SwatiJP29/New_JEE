package com.jp.hr.beans;

import javax.annotation.PostConstruct;

import org.springframework.beans.factory.InitializingBean;
import org.springframework.stereotype.Component;

/*The implementation of Initializing Bean interface
 * * The name of implementing method can not be customizable
 * The exception being thrown can not be changed
 * The initializing code can not be grouped as per category in different methods.
 * The interface tightly bound the code to Spring framework API
 * 
 * 
 */
@Component("service")
public class ServiceBean implements InitializingBean {
	private int x;
	
	public ServiceBean(int x) {
		this.x = x;
		System.out.println("In contructor");
	}
	
	public void setValueX(int x){
		this.x = x;
		System.out.println("In setter");
	}
	
	//The best practice is to validate every value coming from user/context.xml file
	@PostConstruct
	public void validateConfig(){
		System.out.println("In validateConfig()");
		if (x>100){
			System.out.println("Wrong input");
		}
	}

	@Override
	public void afterPropertiesSet() throws Exception {
		System.out.println("In after properties");
		
	}

	@Override
	public String toString() {
		return "ServiceBean [x=" + x + "]";
	}
	
	

}
